{"ast":null,"code":"import { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport CommList from \"../components/CommList\";\nimport { List, Provider as PaperProvider } from \"react-native-paper\";\nimport colors from \"../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar signalr = require(\"@microsoft/signalr\");\n\nvar i = 0;\nvar j = 0;\nvar haveComms = false;\nvar connection = new signalr.HubConnectionBuilder().withUrl(\"https://15a0-87-247-108-4.eu.ngrok.io/ClientHub\").configureLogging(signalr.LogLevel.Information).withAutomaticReconnect().build();\n\nfunction updateHaveComms(bool) {\n  haveComms = bool;\n}\n\nfunction needAllActiveComms() {\n  if (j == 5) {\n    alert(\"Communications was not received. Please ensure server is connected to SignalR and restart the app.\");\n    return;\n  }\n\n  j++;\n\n  if (haveComms) {\n    return;\n  } else {\n    ToastAndroid.show(\"Communications was not received. Is the server on? Trying again...\", ToastAndroid.SHORT);\n    connection.invoke(\"NeedAllActiveComms\");\n    setTimeout(function () {\n      return needAllActiveComms();\n    }, 10000);\n  }\n}\n\nfunction start() {\n  if (i == 5) {\n    alert(\"Connection with SignalR was not established. Please ensure the middleware is available.\");\n    return;\n  }\n\n  i++;\n\n  try {\n    connection.start().then(function () {\n      console.assert(connection.state === signalr.HubConnectionState.Connected);\n      ToastAndroid.show(\"SignalR connected.\", ToastAndroid.SHORT);\n      needAllActiveComms();\n    });\n  } catch (err) {\n    console.assert(connection.state === signalr.HubConnectionState.Disconnected);\n    ToastAndroid.show(\"Connection with SignalR was not established. Reconnecting...\", ToastAndroid.SHORT);\n    setTimeout(function () {\n      return start();\n    }, 5000);\n  }\n}\n\nconnection.on(\"ReceiveMessage\", function (user, message) {\n  console.log(\"Client received: User: \" + user + \" Message: \" + message);\n});\nconnection.onreconnecting(function (error) {\n  console.assert(connection.state === signalr.HubConnectionState.Reconnecting);\n  ToastAndroid.show(\"Connection to SignalR was lost. Reconnecting...\", ToastAndroid.SHORT);\n});\nconnection.onreconnected(function (connectionId) {\n  console.assert(connection.state === signalr.HubConnectionState.Connected);\n  ToastAndroid.show(\"Connection with SignalR was reestablished.\", ToastAndroid.SHORT);\n});\nconnection.onclose(function (error) {\n  console.assert(connection.state === signalr.HubConnectionState.Disconnected);\n  alert(\"Connection with SignalR was lost. Please ensure the middleware is available.\");\n});\n\nfunction HomeScreen(props) {\n  useEffect(function () {\n    start();\n  }, []);\n  return _jsx(View, {\n    style: styles.background,\n    children: _jsx(CommList, {\n      updateHaveComms: updateHaveComms,\n      connection: connection,\n      navigation: props.navigation\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: colors.primary\n  },\n  loginButton: {\n    backgroundColor: \"blue\",\n    width: \"100%\",\n    height: 70\n  },\n  logo: {},\n  logoContainer: {\n    position: \"absolute\",\n    top: 25,\n    alignItems: \"center\"\n  },\n  registerButton: {\n    backgroundColor: \"gold\",\n    width: \"100%\",\n    height: 70\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["useEffect","CommList","List","Provider","PaperProvider","colors","signalr","require","i","j","haveComms","connection","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","withAutomaticReconnect","build","updateHaveComms","bool","needAllActiveComms","alert","ToastAndroid","show","SHORT","invoke","setTimeout","start","then","console","assert","state","HubConnectionState","Connected","err","Disconnected","on","user","message","log","onreconnecting","error","Reconnecting","onreconnected","connectionId","onclose","HomeScreen","props","styles","background","navigation","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","primary","loginButton","width","height","logo","logoContainer","position","top","registerButton"],"sources":["H:/Bakalauro projektas/App/CommLinkMobileApp/app/screens/HomeScreen.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { StyleSheet, View, ToastAndroid } from \"react-native\";\nimport CommList from \"../components/CommList\";\nimport { List, Provider as PaperProvider } from \"react-native-paper\";\nimport colors from \"../config/colors\";\n\nconst signalr = require(\"@microsoft/signalr\");\nlet i = 0;\nlet j = 0;\nlet haveComms = false;\nlet connection = new signalr.HubConnectionBuilder()\n  .withUrl(\"https://15a0-87-247-108-4.eu.ngrok.io/ClientHub\")\n  .configureLogging(signalr.LogLevel.Information)\n  .withAutomaticReconnect()\n  .build();\n/*\nfunction connect() {\n  connection.start().then(() => {\n    needAllActiveComms();\n    console.log(\"Client send: Need all active comms!\");\n  });\n}\n*/\nfunction updateHaveComms(bool) {\n  haveComms = bool;\n}\n\nfunction needAllActiveComms() {\n  if (j == 5) {\n    alert(\n      \"Communications was not received. Please ensure server is connected to SignalR and restart the app.\"\n    );\n    return;\n  }\n  j++;\n  if (haveComms) {\n    return;\n  } else {\n    ToastAndroid.show(\n      \"Communications was not received. Is the server on? Trying again...\",\n      ToastAndroid.SHORT\n    );\n    connection.invoke(\"NeedAllActiveComms\");\n    setTimeout(() => needAllActiveComms(), 10000);\n  }\n}\n\nfunction start() {\n  if (i == 5) {\n    alert(\n      \"Connection with SignalR was not established. Please ensure the middleware is available.\"\n    );\n    return;\n  }\n  i++;\n  try {\n    connection.start().then(() => {\n      //j = 0;\n      console.assert(connection.state === signalr.HubConnectionState.Connected);\n      ToastAndroid.show(\"SignalR connected.\", ToastAndroid.SHORT);\n      needAllActiveComms();\n    });\n  } catch (err) {\n    console.assert(\n      connection.state === signalr.HubConnectionState.Disconnected\n    );\n    ToastAndroid.show(\n      \"Connection with SignalR was not established. Reconnecting...\",\n      ToastAndroid.SHORT\n    );\n    setTimeout(() => start(), 5000);\n  }\n}\n\nconnection.on(\"ReceiveMessage\", (user, message) => {\n  console.log(\"Client received: User: \" + user + \" Message: \" + message);\n});\n\nconnection.onreconnecting((error) => {\n  console.assert(connection.state === signalr.HubConnectionState.Reconnecting);\n  ToastAndroid.show(\n    \"Connection to SignalR was lost. Reconnecting...\",\n    ToastAndroid.SHORT\n  );\n});\n\nconnection.onreconnected((connectionId) => {\n  console.assert(connection.state === signalr.HubConnectionState.Connected);\n  ToastAndroid.show(\n    \"Connection with SignalR was reestablished.\",\n    ToastAndroid.SHORT\n  );\n});\n\nconnection.onclose((error) => {\n  console.assert(connection.state === signalr.HubConnectionState.Disconnected);\n  alert(\n    \"Connection with SignalR was lost. Please ensure the middleware is available.\"\n  );\n});\n\nfunction HomeScreen(props) {\n  useEffect(() => {\n    //i = 0;\n    start();\n  }, []);\n\n  //ctrl + space to look for values in properties\n  return (\n    <View style={styles.background}>\n      <CommList\n        updateHaveComms={updateHaveComms}\n        connection={connection}\n        navigation={props.navigation}\n      ></CommList>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: colors.primary,\n  },\n  loginButton: {\n    backgroundColor: \"blue\",\n    width: \"100%\",\n    height: 70,\n  },\n  logo: {},\n  logoContainer: {\n    position: \"absolute\",\n    top: 25,\n    alignItems: \"center\",\n  },\n  registerButton: {\n    backgroundColor: \"gold\",\n    width: \"100%\",\n    height: 70,\n  },\n});\n\nexport default HomeScreen;\n\n/*\n<ImageBackground\n      source={{\n        uri: \"https://picsum.photos/200/300\",\n      }}\n      style={styles.background}\n    >\n      <View style={styles.logoContainer}>\n        <Image\n          style={styles.logo}\n          source={{\n            width: 100,\n            height: 150,\n            uri: \"https://picsum.photos/200/300\",\n          }}\n        />\n        <Text>TestText</Text>\n      </View>\n\n      <View style={styles.loginButton}></View>\n      <View style={styles.registerButton}></View>\n      \n    </ImageBackground>\n\n    */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}